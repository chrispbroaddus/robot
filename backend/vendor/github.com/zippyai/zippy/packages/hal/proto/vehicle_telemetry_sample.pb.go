// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packages/hal/proto/vehicle_telemetry_sample.proto

package hal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import core "github.com/zippyai/zippy/packages/core/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// / Currently a placeholder for vehicle telemetry / state
type VehicleTelemetrySample struct {
	// / Should always be {name: "Zippy", serialNumber: vehicle serial number}
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	// / Timestamp immediately before when this message was sent.
	SystemSendTimestamp *core.SystemTimestamp `protobuf:"bytes,2,opt,name=systemSendTimestamp" json:"systemSendTimestamp,omitempty"`
	// / System timestamp when this state was captured / estimated
	SystemStateTimestamp *core.SystemTimestamp `protobuf:"bytes,3,opt,name=systemStateTimestamp" json:"systemStateTimestamp,omitempty"`
}

func (m *VehicleTelemetrySample) Reset()                    { *m = VehicleTelemetrySample{} }
func (m *VehicleTelemetrySample) String() string            { return proto.CompactTextString(m) }
func (*VehicleTelemetrySample) ProtoMessage()               {}
func (*VehicleTelemetrySample) Descriptor() ([]byte, []int) { return fileDescriptor34, []int{0} }

func (m *VehicleTelemetrySample) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *VehicleTelemetrySample) GetSystemSendTimestamp() *core.SystemTimestamp {
	if m != nil {
		return m.SystemSendTimestamp
	}
	return nil
}

func (m *VehicleTelemetrySample) GetSystemStateTimestamp() *core.SystemTimestamp {
	if m != nil {
		return m.SystemStateTimestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*VehicleTelemetrySample)(nil), "hal.VehicleTelemetrySample")
}

func init() { proto.RegisterFile("packages/hal/proto/vehicle_telemetry_sample.proto", fileDescriptor34) }

var fileDescriptor34 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x2c, 0x48, 0x4c, 0xce,
	0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0xcf, 0x48, 0xcc, 0xd1, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f,
	0x4b, 0xcd, 0xc8, 0x4c, 0xce, 0x49, 0x8d, 0x2f, 0x49, 0xcd, 0x49, 0xcd, 0x4d, 0x2d, 0x29, 0xaa,
	0x8c, 0x2f, 0x4e, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x03, 0x4b, 0x0b, 0x31, 0x67, 0x24, 0xe6, 0x48,
	0xc9, 0x63, 0xd1, 0x97, 0x92, 0x5a, 0x96, 0x99, 0x0c, 0x55, 0x25, 0xa5, 0x0c, 0x57, 0x90, 0x9c,
	0x5f, 0x94, 0x0a, 0x55, 0x51, 0x92, 0x99, 0x9b, 0x5a, 0x5c, 0x92, 0x98, 0x5b, 0x00, 0x51, 0xa4,
	0x74, 0x91, 0x91, 0x4b, 0x2c, 0x0c, 0x62, 0x5b, 0x08, 0xcc, 0xb2, 0x60, 0xb0, 0x5d, 0x42, 0xca,
	0x5c, 0x6c, 0x10, 0xf3, 0x24, 0x18, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0xb8, 0xf5, 0x32, 0x12, 0x73,
	0xf4, 0x5c, 0xc0, 0x42, 0x41, 0x50, 0x29, 0x21, 0x77, 0x2e, 0xe1, 0xe2, 0xca, 0xe2, 0x92, 0xd4,
	0xdc, 0xe0, 0xd4, 0xbc, 0x94, 0x10, 0x98, 0xe1, 0x12, 0x4c, 0x60, 0x1d, 0xa2, 0x7a, 0x20, 0x9b,
	0xf5, 0x82, 0xc1, 0x0a, 0xe0, 0x92, 0x41, 0xd8, 0x74, 0x08, 0x79, 0x72, 0x89, 0x40, 0x85, 0x4b,
	0x12, 0x4b, 0x52, 0x11, 0x26, 0x31, 0xe3, 0x33, 0x09, 0xab, 0x96, 0x24, 0x36, 0xb0, 0xd7, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xea, 0x2e, 0x13, 0x5a, 0x01, 0x00, 0x00,
}
