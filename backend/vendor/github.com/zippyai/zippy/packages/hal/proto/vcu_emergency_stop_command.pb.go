// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packages/hal/proto/vcu_emergency_stop_command.proto

package hal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// / Request an emergency stop.
// /
// / There are several implications of issuing an emergency stop:
// / -# Mercury will kick in and attempt to shut everything down in an orderly fashion. Specifically,
// /    if were launched by mercury and sent an e-stop command, you will eventually be (forcibly, if
// /    necessary) killed.
// / -# Emergency stops are always considered "safe" and hence are guaranteed to be accepted by the VCU.
// /    As a result, you may have been killed prior to receiving a response to the e-stop.
// / -# The VCU will have to clear the e-stop somehow and return to idle before Mercury will attempt to
// /    restart software components.
// / .
// /
// / TL;DR: don't use this.
type VCUEmergencyStopCommand struct {
}

func (m *VCUEmergencyStopCommand) Reset()                    { *m = VCUEmergencyStopCommand{} }
func (m *VCUEmergencyStopCommand) String() string            { return proto.CompactTextString(m) }
func (*VCUEmergencyStopCommand) ProtoMessage()               {}
func (*VCUEmergencyStopCommand) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0} }

func init() {
	proto.RegisterType((*VCUEmergencyStopCommand)(nil), "hal.VCUEmergencyStopCommand")
}

func init() {
	proto.RegisterFile("packages/hal/proto/vcu_emergency_stop_command.proto", fileDescriptor22)
}

var fileDescriptor22 = []byte{
	// 101 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x2e, 0x48, 0x4c, 0xce,
	0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0xcf, 0x48, 0xcc, 0xd1, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f,
	0x4b, 0x2e, 0x8d, 0x4f, 0xcd, 0x4d, 0x2d, 0x4a, 0x4f, 0xcd, 0x4b, 0xae, 0x8c, 0x2f, 0x2e, 0xc9,
	0x2f, 0x88, 0x4f, 0xce, 0xcf, 0xcd, 0x4d, 0xcc, 0x4b, 0xd1, 0x03, 0x2b, 0x10, 0x62, 0xce, 0x48,
	0xcc, 0x51, 0x92, 0xe4, 0x12, 0x0f, 0x73, 0x0e, 0x75, 0x85, 0xa9, 0x0b, 0x2e, 0xc9, 0x2f, 0x70,
	0x86, 0xa8, 0x4a, 0x62, 0x03, 0x2b, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x45, 0x31,
	0x1f, 0x5d, 0x00, 0x00, 0x00,
}
