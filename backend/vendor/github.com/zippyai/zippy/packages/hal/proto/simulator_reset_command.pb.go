// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packages/hal/proto/simulator_reset_command.proto

package hal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SimulatorResetCommand struct {
	// Reset flags
	ResetRobot   bool `protobuf:"varint,1,opt,name=resetRobot" json:"resetRobot,omitempty"`
	ResetWorld   bool `protobuf:"varint,2,opt,name=resetWorld" json:"resetWorld,omitempty"`
	ResetStreams bool `protobuf:"varint,3,opt,name=resetStreams" json:"resetStreams,omitempty"`
}

func (m *SimulatorResetCommand) Reset()                    { *m = SimulatorResetCommand{} }
func (m *SimulatorResetCommand) String() string            { return proto.CompactTextString(m) }
func (*SimulatorResetCommand) ProtoMessage()               {}
func (*SimulatorResetCommand) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0} }

func (m *SimulatorResetCommand) GetResetRobot() bool {
	if m != nil {
		return m.ResetRobot
	}
	return false
}

func (m *SimulatorResetCommand) GetResetWorld() bool {
	if m != nil {
		return m.ResetWorld
	}
	return false
}

func (m *SimulatorResetCommand) GetResetStreams() bool {
	if m != nil {
		return m.ResetStreams
	}
	return false
}

func init() {
	proto.RegisterType((*SimulatorResetCommand)(nil), "hal.SimulatorResetCommand")
}

func init() { proto.RegisterFile("packages/hal/proto/simulator_reset_command.proto", fileDescriptor15) }

var fileDescriptor15 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x28, 0x48, 0x4c, 0xce,
	0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0xcf, 0x48, 0xcc, 0xd1, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f,
	0xce, 0xcc, 0x2d, 0xcd, 0x49, 0x2c, 0xc9, 0x2f, 0x8a, 0x2f, 0x4a, 0x2d, 0x4e, 0x2d, 0x89, 0x4f,
	0xce, 0xcf, 0xcd, 0x4d, 0xcc, 0x4b, 0xd1, 0x03, 0xcb, 0x0a, 0x31, 0x67, 0x24, 0xe6, 0x28, 0x55,
	0x73, 0x89, 0x06, 0xc3, 0x54, 0x05, 0x81, 0x14, 0x39, 0x43, 0xd4, 0x08, 0xc9, 0x71, 0x71, 0x81,
	0x35, 0x05, 0xe5, 0x27, 0xe5, 0x97, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x04, 0x21, 0x89, 0xc0,
	0xe5, 0xc3, 0xf3, 0x8b, 0x72, 0x52, 0x24, 0x98, 0x90, 0xe4, 0xc1, 0x22, 0x42, 0x4a, 0x5c, 0x3c,
	0x60, 0x5e, 0x70, 0x49, 0x51, 0x6a, 0x62, 0x6e, 0xb1, 0x04, 0x33, 0x58, 0x05, 0x8a, 0x58, 0x12,
	0x1b, 0xd8, 0x21, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x10, 0x52, 0xf5, 0x16, 0xbc, 0x00,
	0x00, 0x00,
}
