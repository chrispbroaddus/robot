// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packages/hal/proto/camera_id.proto

package hal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// /
// / @brief Camera Id is used to tag each camera
// /
type CameraId int32

const (
	CameraId_FrontLeftStereo  CameraId = 0
	CameraId_FrontRightStereo CameraId = 1
	CameraId_RearLeftStereo   CameraId = 2
	CameraId_RearRightStereo  CameraId = 3
	CameraId_FrontFisheye     CameraId = 4
	CameraId_RearFisheye      CameraId = 5
	CameraId_LeftFisheye      CameraId = 6
	CameraId_RightFisheye     CameraId = 7
)

var CameraId_name = map[int32]string{
	0: "FrontLeftStereo",
	1: "FrontRightStereo",
	2: "RearLeftStereo",
	3: "RearRightStereo",
	4: "FrontFisheye",
	5: "RearFisheye",
	6: "LeftFisheye",
	7: "RightFisheye",
}
var CameraId_value = map[string]int32{
	"FrontLeftStereo":  0,
	"FrontRightStereo": 1,
	"RearLeftStereo":   2,
	"RearRightStereo":  3,
	"FrontFisheye":     4,
	"RearFisheye":      5,
	"LeftFisheye":      6,
	"RightFisheye":     7,
}

func (x CameraId) String() string {
	return proto.EnumName(CameraId_name, int32(x))
}
func (CameraId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func init() {
	proto.RegisterEnum("hal.CameraId", CameraId_name, CameraId_value)
}

func init() { proto.RegisterFile("packages/hal/proto/camera_id.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2a, 0x48, 0x4c, 0xce,
	0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0xcf, 0x48, 0xcc, 0xd1, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f,
	0x4e, 0xcc, 0x4d, 0x2d, 0x4a, 0x8c, 0xcf, 0x4c, 0xd1, 0x03, 0xf3, 0x85, 0x98, 0x33, 0x12, 0x73,
	0xb4, 0x96, 0x30, 0x72, 0x71, 0x38, 0x83, 0x25, 0x3c, 0x53, 0x84, 0x84, 0xb9, 0xf8, 0xdd, 0x8a,
	0xf2, 0xf3, 0x4a, 0x7c, 0x52, 0xd3, 0x4a, 0x82, 0x4b, 0x52, 0x8b, 0x52, 0xf3, 0x05, 0x18, 0x84,
	0x44, 0xb8, 0x04, 0xc0, 0x82, 0x41, 0x99, 0xe9, 0x19, 0x30, 0x51, 0x46, 0x21, 0x21, 0x2e, 0xbe,
	0xa0, 0xd4, 0xc4, 0x22, 0x24, 0x95, 0x4c, 0x20, 0xed, 0x20, 0x31, 0x64, 0x85, 0xcc, 0x42, 0x02,
	0x5c, 0x3c, 0x60, 0xed, 0x6e, 0x99, 0xc5, 0x19, 0xa9, 0x95, 0xa9, 0x02, 0x2c, 0x42, 0xfc, 0x5c,
	0xdc, 0x20, 0x65, 0x30, 0x01, 0x56, 0x90, 0x00, 0xc8, 0x1c, 0x98, 0x00, 0x1b, 0x48, 0x0f, 0xd8,
	0x10, 0x98, 0x08, 0x7b, 0x12, 0x1b, 0xd8, 0xc9, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfb,
	0x86, 0x1c, 0xd0, 0xd8, 0x00, 0x00, 0x00,
}
