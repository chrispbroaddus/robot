// Code generated by protoc-gen-go. DO NOT EDIT.
// source: packages/streamer/proto/signaler_options.proto

/*
Package streamer is a generated protocol buffer package.

It is generated from these files:
	packages/streamer/proto/signaler_options.proto
	packages/streamer/proto/stream.proto

It has these top-level messages:
	STUNServer
	TURNServer
	SignalerOptions
	Stream
*/
package streamer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// / Address of a STUN server used in ICE handshake
type STUNServer struct {
	// / Address in format "host:port"
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
}

func (m *STUNServer) Reset()                    { *m = STUNServer{} }
func (m *STUNServer) String() string            { return proto.CompactTextString(m) }
func (*STUNServer) ProtoMessage()               {}
func (*STUNServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *STUNServer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// / Address of a TURN server used in ICE handshake
type TURNServer struct {
	// / Address in format "host:port"
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	// / Username for authentication, or empty for no authentication
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// / Password for authentication, or empty for no authentication
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *TURNServer) Reset()                    { *m = TURNServer{} }
func (m *TURNServer) String() string            { return proto.CompactTextString(m) }
func (*TURNServer) ProtoMessage()               {}
func (*TURNServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TURNServer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TURNServer) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TURNServer) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// Options contains configuration for the streamer.
type SignalerOptions struct {
	// / first allowed UDP port for incoming peer connections
	MinUdpPort int32 `protobuf:"varint,1,opt,name=min_udp_port,json=minUdpPort" json:"min_udp_port,omitempty"`
	// / last allowed UDP port for incoming peer connections
	MaxUdpPort int32 `protobuf:"varint,2,opt,name=max_udp_port,json=maxUdpPort" json:"max_udp_port,omitempty"`
	// / STUN servers for webrtc, in format "host:port"
	StunServers []*STUNServer `protobuf:"bytes,3,rep,name=stun_servers,json=stunServers" json:"stun_servers,omitempty"`
	// / TURN servers for webrtc
	TurnServers []*TURNServer `protobuf:"bytes,4,rep,name=turn_servers,json=turnServers" json:"turn_servers,omitempty"`
}

func (m *SignalerOptions) Reset()                    { *m = SignalerOptions{} }
func (m *SignalerOptions) String() string            { return proto.CompactTextString(m) }
func (*SignalerOptions) ProtoMessage()               {}
func (*SignalerOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SignalerOptions) GetMinUdpPort() int32 {
	if m != nil {
		return m.MinUdpPort
	}
	return 0
}

func (m *SignalerOptions) GetMaxUdpPort() int32 {
	if m != nil {
		return m.MaxUdpPort
	}
	return 0
}

func (m *SignalerOptions) GetStunServers() []*STUNServer {
	if m != nil {
		return m.StunServers
	}
	return nil
}

func (m *SignalerOptions) GetTurnServers() []*TURNServer {
	if m != nil {
		return m.TurnServers
	}
	return nil
}

func init() {
	proto.RegisterType((*STUNServer)(nil), "streamer.STUNServer")
	proto.RegisterType((*TURNServer)(nil), "streamer.TURNServer")
	proto.RegisterType((*SignalerOptions)(nil), "streamer.SignalerOptions")
}

func init() { proto.RegisterFile("packages/streamer/proto/signaler_options.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xc1, 0x4a, 0xf4, 0x30,
	0x14, 0x85, 0xe9, 0xf4, 0xff, 0x75, 0xbc, 0x1d, 0x10, 0x8a, 0x8b, 0xe0, 0xaa, 0x74, 0x21, 0xb3,
	0x6a, 0x41, 0x17, 0xbe, 0x85, 0x4a, 0x3a, 0xdd, 0x5a, 0xa2, 0xb9, 0x0c, 0x45, 0x9b, 0x84, 0x7b,
	0x53, 0x9d, 0x37, 0xf4, 0xb5, 0xa4, 0x69, 0x63, 0xc1, 0x8d, 0xbb, 0x9c, 0x9c, 0xef, 0x90, 0x93,
	0x03, 0x95, 0x53, 0xaf, 0x6f, 0xea, 0x88, 0x5c, 0xb3, 0x27, 0x54, 0x03, 0x52, 0xed, 0xc8, 0x7a,
	0x5b, 0x73, 0x7f, 0x34, 0xea, 0x1d, 0xa9, 0xb3, 0xce, 0xf7, 0xd6, 0x70, 0x15, 0xae, 0xf3, 0x6d,
	0xc4, 0xca, 0x1b, 0x80, 0xe6, 0xd0, 0x3e, 0x34, 0x48, 0x1f, 0x48, 0xb9, 0x80, 0x73, 0xa5, 0x35,
	0x21, 0xb3, 0x48, 0x8a, 0x64, 0x7f, 0x21, 0xa3, 0x2c, 0x9f, 0x01, 0x0e, 0xad, 0xfc, 0x93, 0xcb,
	0xaf, 0x61, 0x3b, 0x32, 0x92, 0x51, 0x03, 0x8a, 0x4d, 0xb0, 0x7e, 0xf4, 0xe4, 0x39, 0xc5, 0xfc,
	0x69, 0x49, 0x8b, 0x74, 0xf6, 0xa2, 0x2e, 0xbf, 0x12, 0xb8, 0x6c, 0x96, 0xb2, 0x8f, 0x73, 0xd7,
	0xbc, 0x80, 0xdd, 0xd0, 0x9b, 0x6e, 0xd4, 0xae, 0x73, 0x96, 0x7c, 0x78, 0xea, 0xbf, 0x84, 0xa1,
	0x37, 0xad, 0x76, 0x4f, 0x96, 0x7c, 0x20, 0xd4, 0x69, 0x25, 0x36, 0x0b, 0xa1, 0x4e, 0x91, 0xb8,
	0x87, 0x1d, 0xfb, 0xd1, 0x74, 0x1c, 0x8a, 0xb3, 0x48, 0x8b, 0x74, 0x9f, 0xdd, 0x5e, 0x55, 0x71,
	0x80, 0x6a, 0xfd, 0xbd, 0xcc, 0x26, 0x72, 0x3e, 0xf3, 0x14, 0xf4, 0x23, 0xad, 0xc1, 0x7f, 0xbf,
	0x83, 0xeb, 0x1c, 0x32, 0x9b, 0xc8, 0x25, 0xf8, 0x72, 0x16, 0x26, 0xbe, 0xfb, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0xf2, 0x42, 0xcd, 0x0e, 0x94, 0x01, 0x00, 0x00,
}
